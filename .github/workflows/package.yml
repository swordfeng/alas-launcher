name: Pack alas-launcher

on:
  push:
    branches: [ ]
  pull_request:
    branches: [ ]
  workflow_dispatch: {}

env:
  UV_MANAGED_PYTHON: 1
  UV_PYTHON_INSTALL_DIR: ${{ github.workspace }}/python
  UV_PYTHON: 3.8.20

jobs:
  package:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            python-platform: linux_x86_64
          - os: macos-latest
            python-platform: macosx_14_0_arm64
          - os: windows-latest
            python-platform: win_amd64

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      - name: Install Python and dependencies with customized MXNet
        shell: bash
        run: |
          export PYTHON_PREFIX=$(uv run python -c 'import sys; print(sys.exec_prefix)')
          echo "PYTHON_PREFIX=$PYTHON_PREFIX" >> $GITHUB_ENV
          curl -L -O https://github.com/swordfeng/mxnet-build/releases/download/rev1/mxnet-1.9.1-cp38-cp38-${{ matrix.python-platform }}.whl
          uvx change_wheel_version mxnet-1.9.1-cp38-cp38-${{ matrix.python-platform }}.whl --version 1.6.0
          uv pip install --prefix "$PYTHON_PREFIX" --no-deps mxnet-1.6.0-cp38-cp38-${{ matrix.python-platform }}.whl --compile-bytecode
          uv pip install --prefix "$PYTHON_PREFIX" -r requirements.in --compile-bytecode
      - name: Get git
        uses: knicknic/os-specific-run@v1.0.3
        with:
          linux: |
            git clone https://github.com/git/git.git --branch v2.49.0 --depth 1
            cd git
            docker run -v $PWD:/volume --rm -t clux/muslrust:stable make configure
            docker run -v $PWD:/volume --rm -t clux/muslrust:stable \
              ./configure --with-openssl --with-curl --with-expat --without-tcltk --prefix=/ \
              CC="musl-gcc -fPIE -pie" LDFLAGS="-L/musl/lib" CFLAGS="-I/musl/include"
            docker run -v $PWD:/volume --rm -t clux/muslrust:stable make RUNTIME_PREFIX=1
            sudo chown -R $USER:$USER .
          macos: |
            brew install autoconf
            git clone https://github.com/git/git.git --branch v2.49.0 --depth 1
            cd git
            make configure
            ./configure --with-openssl --with-curl --with-expat --without-tcltk --prefix=/
            make RUNTIME_PREFIX=1
          windows: |
            curl -L -O https://github.com/git-for-windows/git/releases/download/v2.49.0.windows.1/MinGit-2.49.0-64-bit.zip
            mkdir git
            cd git
            tar -xvf ..\MinGit-2.49.0-64-bit.zip
      - name: Get adb
        uses: knicknic/os-specific-run@v1.0.3
        with:
          macos: |
            curl -L -o adb.zip https://dl.google.com/android/repository/platform-tools-latest-darwin.zip
            unzip adb.zip
          linux: |
            curl -L -o adb.zip https://dl.google.com/android/repository/platform-tools-latest-linux.zip
            unzip adb.zip
          windows: |
            curl -L -o adb.zip https://dl.google.com/android/repository/platform-tools-latest-windows.zip
            tar -xvf adb.zip
      - name: Get ALAS
        run: |
          git clone https://github.com/LmeSzinc/AzurLaneAutoScript.git --depth 1
      - name: Distribute
        uses: knicknic/os-specific-run@v1.0.3
        with:
          macos: |
            cd AzurLaneAutoScript
            mkdir -p toolkit/bin
            make -C ../git RUNTIME_PREFIX=1 install DESTDIR=$PWD/toolkit/
            cp ../platform-tools/adb toolkit/bin/
            cp -r $PYTHON_PREFIX/* toolkit/
          linux: |
            cd AzurLaneAutoScript
            mkdir -p toolkit/bin
            make -C ../git RUNTIME_PREFIX=1 install DESTDIR=$PWD/toolkit/
            cp ../platform-tools/adb toolkit/bin/
            cp -r $PYTHON_PREFIX/* toolkit/
          windows: |
            cd AzurLaneAutoScript
            mkdir -p toolkit
            cp -r ..\git toolkit\
            cp ..\platform-tools\adb.exe, ..\platform-tools\Adb*.dll toolkit\
            cp -r ($env:PYTHON_PREFIX + "\*") toolkit\
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: alas-launcher-${{ matrix.os }}
          include-hidden-files: true
          path: |
            AzurLaneAutoScript
